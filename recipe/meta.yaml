{% set version = "3.24" %}

package:
  name: bullet
  version: {{ version }}

source:
  fn: bullet3-{{ version }}.tar.gz
  url: https://github.com/bulletphysics/bullet3/archive/{{ version }}.tar.gz
  sha256: 6b1e987d6f8156fa8a6468652f4eaad17b3e11252c9870359e5bca693e35780b
  patches:
    - add_rt.patch  # [linux]
    # On ppc64le compilation of Bullet3OpenCL fails (https://github.com/conda-forge/bullet-feedstock/issues/24)
    - disable-bullet3opencl.patch  # [ppc64le]
    # The setup.py hardcodes a custom logic to decide the number of compilation threads, 
    # let's override it for memory limited architectures (as of early 2021, travis with ppc64le)
    - setup-py-single-thread-compilation.patch  # [ppc64le]
    - fix-find-pythonlibs.patch  # [linux]
    - double-precision-postfix.patch

build:
  number: 3

outputs:
  - name: bullet-cpp
    script: build_cpp.sh  # [unix]
    script: bld_cpp.bat  # [win]
    build:
      run_exports:
        - {{ pin_subpackage('bullet-cpp', max_pin='x.x.x') }}

    requirements:
      build:
        - python                                 # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
        - numpy                                  # [build_platform != target_platform]
        - cmake
        - ninja
        - {{ compiler("c") }}
        - {{ compiler("cxx") }}
        - {{ cdt('mesa-libgl-devel') }}    # [linux]
        - {{ cdt('mesa-dri-drivers') }}    # [linux]
      host:
        - xorg-libx11    # [unix]
        - xorg-libxext   # [unix]
        - python
        - numpy
      run:
        - xorg-libx11   # [unix]
        - xorg-libxext  # [unix]
    test:
      commands:
        - test -d ${PREFIX}/include/bullet  # [unix]
        - test -f ${PREFIX}/include/bullet/BulletSoftBody/btSoftBody.h  # [unix]
        - test -f ${PREFIX}/lib/pkgconfig/bullet.pc  # [unix]
        - test -f ${PREFIX}/lib/cmake/bullet/BulletConfig.cmake  # [unix]
        - test -f ${PREFIX}/lib/libBulletExampleBrowserLib${SHLIB_EXT}  # [unix]
        - test -f ${PREFIX}/lib/libgwen${SHLIB_EXT}  # [unix]
        - test -f ${PREFIX}/lib/libBussIK${SHLIB_EXT}  # [unix]
        - test -f ${PREFIX}/lib/libBullet3Dynamics${SHLIB_EXT}  # [unix]
        - if not exist %LIBRARY_PREFIX%\include\bullet\BulletSoftBody\btSoftBody.h (exit 1)  # [win]
        - if not exist %LIBRARY_PREFIX%\lib\cmake\bullet\BulletConfig.cmake (exit 1)  # [win]
        - if not exist %LIBRARY_PREFIX%\lib\BussIK.lib (exit 1)  # [win]
        - if not exist %LIBRARY_PREFIX%\lib\BulletCollision.lib (exit 1)  # [win]

  - name: pybullet
    script: build_py.sh  # [unix]
    script: bld_py.bat  # [win]
    requirements:
      build:
        - python                                 # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
        - numpy                                  # [build_platform != target_platform]
        - cmake
        - ninja
        - {{ compiler("c") }}
        - {{ compiler("cxx") }}
      host:
        - {{ pin_subpackage("bullet-cpp", exact=True) }}
        - python
        - pip
        - numpy
      run:
        - {{ pin_subpackage("bullet-cpp", exact=True) }}
        - python
        - numpy
    test:
      imports:
        - pybullet

  - name: bullet
    requirements:
      run:
        - {{ pin_subpackage("bullet-cpp", exact=True) }}
        - {{ pin_subpackage("pybullet", exact=True) }}
        - python
        - numpy
    test:
      imports:
        - pybullet
      commands:
        - test -f ${PREFIX}/include/bullet/BulletSoftBody/btSoftBody.h  # [unix]
        - if not exist %LIBRARY_PREFIX%\include\bullet\BulletSoftBody\btSoftBody.h (exit 1)  # [win]

about:
  home: http://bulletphysics.org
  license: Zlib
  license_file: LICENSE.txt
  summary: |
    Bullet Physics SDK real-time collision detection and multi-physics
    simulation for VR, games, visual effects, robotics, machine learning
    etc.

extra:
  recipe-maintainers:
    - wolfv
